{"version":3,"sources":["ChartComponent.jsx","App.jsx","theme.js","index.jsx"],"names":["useStyles","makeStyles","container","props","display","xLabel","yLabel","maxHeight","wrapper","backgroundColor","applyNoise","x","Math","random","dataNoise","ChartComponent","theme","useTheme","axisStyle","ticks","stroke","grid","tickLabels","fill","axis","palette","primary","main","axisLabel","text","getAxisStyle","lineStyle","data","getLineStyle","classes","chartElement","React","useRef","useState","setData","useEffect","Array","from","keys","map","value","y","storeAsImage","format","a","current","imageUrl","dummyElement","document","createElement","href","download","click","Container","className","maxWidth","ref","VictoryTheme","material","style","label","dependentAxis","Button","onClick","domToImage","toSvg","toPng","HASH_X_LABEL","HASH_Y_LABEL","root","height","background","default","color","flexDirection","textAlign","textDiv","alignItems","justifyContent","textFieldPadding","paddingLeft","paddingRight","alignRight","textField","minWidth","App","setXLabel","setYLabel","handleChange","setter","event","target","params","URLSearchParams","window","location","hash","slice","get","toString","Typography","TextField","onChange","inputProps","createTheme","typography","fontSize","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.4994c036.chunk.js","sourcesContent":["import { Button, Container } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  VictoryAxis, VictoryChart, VictoryLine, VictoryTheme,\n} from 'victory';\nimport domToImage from 'dom-to-image';\n\nconst useStyles = makeStyles({\n  container: (props) => ({\n    display: props.xLabel && props.yLabel ? 'unset' : 'none',\n    maxHeight: '75vh',\n  }),\n  wrapper: {\n    backgroundColor: 'white',\n  },\n});\n\nconst getAxisStyle = (theme) => ({\n  ticks: {\n    stroke: 'transparent',\n  },\n  grid: {\n    stroke: 'transparent',\n  },\n  tickLabels: {\n    fill: 'transparent',\n  },\n  axis: {\n    stroke: theme.palette.primary.main,\n  },\n  axisLabel: {\n    fill: theme.palette.text.primary,\n  },\n});\n\nconst getLineStyle = (theme) => ({\n  data: {\n    stroke: theme.palette.primary.main,\n  },\n});\n\nconst dataSize = 25;\nconst dataNoise = 0.5;\n\nconst applyNoise = (x) => x + (Math.random() * dataNoise) - (dataNoise / 2);\n\nconst randomData = () => Array.from(new Array(dataSize).keys()).map((value) => ({\n  x: applyNoise(value),\n  y: applyNoise(value),\n}));\n\nfunction ChartComponent(props) {\n  const {\n    xLabel, yLabel,\n  } = props;\n  const theme = useTheme();\n  const axisStyle = getAxisStyle(theme);\n  const lineStyle = getLineStyle(theme);\n  const classes = useStyles(props);\n  const chartElement = React.useRef(null);\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    if (xLabel && yLabel) {\n      setData(randomData());\n    }\n  }, [!!(xLabel && yLabel)]);\n\n  const storeAsImage = (format) => async () => {\n    const imageUrl = await format(chartElement.current);\n    const dummyElement = document.createElement('a');\n    dummyElement.href = imageUrl;\n    dummyElement.download = `${xLabel}_${yLabel}_correlation`;\n    dummyElement.click();\n  };\n\n  return (\n    <Container className={classes.container} maxWidth=\"md\">\n      <div ref={chartElement} className={classes.wrapper}>\n        <VictoryChart theme={VictoryTheme.material}>\n          <VictoryLine data={data} style={lineStyle} />\n          <VictoryAxis label={xLabel} style={axisStyle} />\n          <VictoryAxis label={yLabel} style={axisStyle} dependentAxis />\n        </VictoryChart>\n      </div>\n      <Button onClick={storeAsImage(domToImage.toSvg)}>Export Chart (.svg)</Button>\n      <br />\n      <Button onClick={storeAsImage(domToImage.toPng)}>Export Chart (.png)</Button>\n    </Container>\n  );\n}\n\nChartComponent.propTypes = {\n  xLabel: PropTypes.string.isRequired,\n  yLabel: PropTypes.string.isRequired,\n};\n\nexport default ChartComponent;\n","import {\n  Typography, TextField, makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport ChartComponent from './ChartComponent';\n\nconst HASH_X_LABEL = 'x-label';\nconst HASH_Y_LABEL = 'y-label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n  },\n  textDiv: {\n    textAlign: 'center',\n    display: 'flex',\n    alignItems: 'baseline',\n    justifyContent: 'center',\n  },\n  textFieldPadding: {\n    paddingLeft: '5px',\n    paddingRight: '5px',\n  },\n  alignRight: {\n    textAlign: 'right',\n  },\n  textField: {\n    minWidth: '35rem',\n  },\n}));\n\nfunction App() {\n  const [xLabel, setXLabel] = React.useState('');\n  const [yLabel, setYLabel] = React.useState('');\n\n  const handleChange = (setter) => (event) => setter(event.target.value);\n\n  React.useEffect(() => {\n    const params = new URLSearchParams(window.location.hash.slice(1));\n    setXLabel(params.get(HASH_X_LABEL) || '');\n    setYLabel(params.get(HASH_Y_LABEL) || '');\n  }, []);\n\n  React.useEffect(() => {\n    if (xLabel && yLabel) {\n      const params = new URLSearchParams({\n        [HASH_X_LABEL]: xLabel,\n        [HASH_Y_LABEL]: yLabel,\n      });\n      window.location.hash = params.toString();\n    } else {\n      window.location.hash = '';\n    }\n  }, [xLabel, yLabel]);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Typography>\n        There is a clear correlation between\n      </Typography>\n      <div className={classes.textDiv}>\n        <TextField\n          value={xLabel}\n          onChange={handleChange(setXLabel)}\n          inputProps={{\n            className: classes.alignRight,\n          }}\n          className={classes.textField}\n        />\n        <Typography className={classes.textFieldPadding}>and</Typography>\n        <TextField\n          value={yLabel}\n          onChange={handleChange(setYLabel)}\n          className={classes.textField}\n        />\n      </div>\n      <ChartComponent xLabel={xLabel} yLabel={yLabel} />\n    </div>\n  );\n}\n\nexport default App;\n","import { createTheme } from '@material-ui/core/styles';\n\nexport default createTheme({\n  /* palette: {\n    primary: {\n      main: '#5adbff',\n    },\n    background: {\n      default: '#094074',\n    },\n    text: {\n      primary: '#fff',\n    },\n  }, */\n  typography: {\n    fontSize: 24,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport './index.css';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}